import type { Metadata } from "next";

import localFont from "next/font/local";
import "./globals.css";
import { UserProvider } from "@/context/userContext";
import { TooltipProvider } from "@/components/ui/tooltip";

import { CustomQueryClientProvider } from "@/components/providers/queryclient.providers";
import { Suspense } from "react";
import { GoogleOAuthProvider } from "@react-oauth/google";
import { Toaster } from "@/components/ui/toaster";

// Primary Font - GeistSans
const geistSans = localFont({
  src: [
    {
      path: "./fonts/GeistVF.woff",
      weight: "100 900",
      style: "normal",
    },
    {
      path: "./fonts/GeistVF.woff",
      weight: "100 900",
      style: "normal",
    },
  ],
  variable: "--font-geist-sans",
  display: "swap",
  preload: true,
});

// Monospace Font - GeistMono
const geistMono = localFont({
  src: [
    {
      path: "./fonts/GeistMonoVF.woff",
      weight: "100 900",
      style: "normal",
    },
    {
      path: "./fonts/GeistMonoVF.woff",
      weight: "100 900",
      style: "normal",
    },
  ],
  variable: "--font-geist-mono",
  display: "swap",
  preload: true,
});

const displayFont = localFont({
  src: [
    {
      path: "./fonts/webfonts/CalSans-SemiBold.woff2",
      weight: "600",
      style: "normal",
    },
    {
      path: "./fonts/webfonts/CalSans-SemiBold.woff",
      weight: "600",
      style: "normal",
    },
  ],
  variable: "--font-display",
  display: "swap",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html
      lang="en"
      className={`${geistSans.variable} ${geistMono.variable} ${displayFont.variable}`}
    >
      <body
        className={`
          antialiased
          min-h-screen
          selection:bg-primary/10
          selection:text-primary
          bg-background
          text-foreground
        `}
      >
        <div className="">
          <main className="">
            <Suspense fallback={<div>Loading...</div>}>
              <GoogleOAuthProvider
                clientId={process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID!}
              >
                <UserProvider>
                  <TooltipProvider>
                    <div className="mx-auto w-full max-w-[1580px]">
                      <CustomQueryClientProvider>
                        {children}
                        <Toaster />
                      </CustomQueryClientProvider>
                    </div>
                  </TooltipProvider>
                </UserProvider>
              </GoogleOAuthProvider>
            </Suspense>
          </main>
        </div>
      </body>
    </html>
  );
}
